{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","newMovie","handleChange","event","target","name","value","setState","handleSubmit","preventDefault","props","addMovie","onSubmit","this","type","placeholder","onChange","required","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"6wEAIaA,G,kBAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,ICxCR,IAAMQ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKN,UAAU,UACZM,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SAgBxCH,EAAWD,aAAe,CACxBE,OAAQ,I,kBCvBGK,EAAb,4MACEC,MAAQ,CACNC,SAAU,CACRjB,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTW,OAAQ,KAPd,EAWEI,aAAe,SAACC,GACd,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEd,EAAKC,UAAS,SAAAP,GAAK,MACjB,CACEC,SAAS,2BACJD,EAAMC,UADH,kBAELI,EAAOC,SAlBlB,EAwBEE,aAAe,SAACL,GACdA,EAAMM,iBACN,EAAKC,MAAMC,SAAX,eAAyB,EAAKX,MAAMC,WAEpC,EAAKM,SAAS,CACZN,SAAU,CACRjB,MAAO,GACPC,YAAa,GACba,OAAQ,GACRX,QAAS,GACTD,OAAQ,OAlChB,4CAuCE,WACE,OACE,0BACE0B,SAAUC,KAAKL,cAEf,6BACE,2BACEM,KAAK,OACLC,YAAY,QACZV,KAAK,QACLC,MAAOO,KAAKb,MAAMhB,MAClBgC,SAAUH,KAAKX,aACfe,UAAQ,KAIZ,6BACE,2BACEH,KAAK,OACLC,YAAY,cACZV,KAAK,cACLC,MAAOO,KAAKb,MAAMf,YAClB+B,SAAUH,KAAKX,aACfe,UAAQ,KAIZ,6BACE,2BACEH,KAAK,MACLC,YAAY,SACZV,KAAK,SACLC,MAAOO,KAAKb,MAAMd,OAClB8B,SAAUH,KAAKX,aACfe,UAAQ,KAIZ,6BACE,2BACEH,KAAK,MACLC,YAAY,UACZV,KAAK,UACLC,MAAOO,KAAKb,MAAMb,QAClB6B,SAAUH,KAAKX,aACfe,UAAQ,KAIZ,6BACE,2BACEH,KAAK,OACLC,YAAY,SACZV,KAAK,SACLC,MAAOO,KAAKb,MAAMF,OAClBkB,SAAUH,KAAKX,aACfe,UAAQ,KAIZ,4BAAQH,KAAK,UAAb,YAnGR,GAA8BI,a,OCGjBC,EAAb,4MACEnB,MAAQ,CACNN,OAAQ0B,GAFZ,EAKET,SAAW,SAACf,GACV,EAAKW,UAAS,SAAAP,GAAK,MAAK,CACtBN,OAAO,GAAD,mBAAMM,EAAMN,QAAZ,CAAoBE,SAPhC,4CAWE,WACE,IAAQF,EAAWmB,KAAKb,MAAhBN,OAER,OACE,yBAAKN,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYM,OAAQA,KAEtB,yBAAKN,UAAU,WACb,kBAAC,EAAD,CAAUuB,SAAUE,KAAKF,iBApBnC,GAAyBO,aCDzBG,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.cd91d4d9.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class NewMovie extends Component {\n  state = {\n    newMovie: {\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    },\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState(state => (\n      {\n        newMovie: {\n          ...state.newMovie,\n          [name]: value,\n        },\n      }\n    ));\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.addMovie({ ...this.state.newMovie });\n\n    this.setState({\n      newMovie: {\n        title: '',\n        description: '',\n        imdbId: '',\n        imdbUrl: '',\n        imgUrl: '',\n      },\n    });\n  }\n\n  render() {\n    return (\n      <form\n        onSubmit={this.handleSubmit}\n      >\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"title\"\n            name=\"title\"\n            value={this.state.title}\n            onChange={this.handleChange}\n            required\n          />\n        </div>\n\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"description\"\n            name=\"description\"\n            value={this.state.description}\n            onChange={this.handleChange}\n            required\n          />\n        </div>\n\n        <div>\n          <input\n            type=\"url\"\n            placeholder=\"imgUrl\"\n            name=\"imgUrl\"\n            value={this.state.imgUrl}\n            onChange={this.handleChange}\n            required\n          />\n        </div>\n\n        <div>\n          <input\n            type=\"url\"\n            placeholder=\"imdbUrl\"\n            name=\"imdbUrl\"\n            value={this.state.imdbUrl}\n            onChange={this.handleChange}\n            required\n          />\n        </div>\n\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"imdbId\"\n            name=\"imdbId\"\n            value={this.state.imdbId}\n            onChange={this.handleChange}\n            required\n          />\n        </div>\n\n        <button type=\"submit\">\n          Add\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}